##############################################################################
# Copyright (c) 2022, 2023 Primetals Technologies Austria GmbH
#                          Martin Erich Jobst
# 
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0.
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Martin Melik Merkumians - initial API and implementation and/or initial documentation
#   Martin Jobst - add linking diagnostic messages
###############################################################################
STCoreControlFlowValidator_VariableUndefinedAfterForLoop=The value of ''{0}'' is undefined after completion of the FOR loop
STCoreImportValidator_ImportNotFound=The import {0} does not exist
STCoreLinkingDiagnosticMessageProvider_UndefinedCallableForType=The callable {0}({1}) is undefined for the type {2}
STCoreLinkingDiagnosticMessageProvider_UndefinedDataType=The data type {0} is undefined
STCoreLinkingDiagnosticMessageProvider_UndefinedParameter=The parameter {0} is undefined
STCoreLinkingDiagnosticMessageProvider_UndefinedParameterForCallable=The parameter {0} is undefined for the callable {1}
STCoreLinkingDiagnosticMessageProvider_UndefinedVariable=The variable {0} is undefined
STCoreLinkingDiagnosticMessageProvider_UndefinedVariableForType=The variable {0} is undefined for the type {1}
STCoreLinkingDiagnosticMessageProvider_UnknownType=unknown
STCoreLinkingDiagnosticMessageProvider_UndefinedCallable=The callable {0}({1}) is undefined
STCoreResource_TypeLoadError=Type Load Error
STCoreValidator_Consecutive_Underscores_In_Identifier=Identifiers shall not contain more than one consecutive underscore ('_') character
STCoreValidator_Identifier_Is_Reserved=Identifier is reserved
STCoreValidator_Implicit_Conversion_In_Literal=Implicit conversion in literal from {0} to {1}
STCoreValidator_Invalid_Literal=Invalid {0} literal: {1}
STCoreValidator_InvalidWildcardImport=Invalid wildcard import ''{0}''
STCoreValidator_Trailing_Underscore_In_Identifier=Identifiers shall not have a trailing underscore ('_') character
STCoreValidator_Argument_Not_Assignable=Argument is not assignable
STCoreValidator_Assignment_Invalid_Left_Side=Not possible to assign a value to the left side of this assignment
STCoreValidator_Attempting_To_Call_Standard_Function_With_Formal_Arguments=Attempting to call standard function {0} with formal arguments
STCoreValidator_AttemptingToModifyControlVariable=Attempting to modify control variable inside FOR loop
STCoreValidator_BinaryOperator_Not_Applicable=Operator {0} is not applicable for types {1} and {2}
STCoreValidator_Feature_Not_Callable=Feature {0} is not callable
STCoreValidator_For_Variable_Not_Integral_Type=Control variable of FOR loop must be of integral type but is {0}
STCoreValidator_Mixing_Formal_And_NonFormal=Mixing formal and non-formal arguments
STCoreValidator_Non_Compatible_Types=Cannot convert from {0} to {1}
STCoreValidator_WildcardImportDiscouraged=The use of wildcard imports is discouraged
STCoreValidator_Wrong_Name_Case=Variable names should be cased as declared
STCoreValidator_Wrong_Number_Of_Arguments=Wrong number of arguments for {0}: expected {1}, got {2}
STCoreValidator_UnaryOperator_Not_Applicable=Operator {0} is not applicable for type {1}
STCoreValidator_UnnecessaryConversion=Unnecessary conversion from {0} to {1}
STCoreValidator_UnnecessaryLiteralConversion=Unnecessary conversion of literal to {0}
STCoreValidator_UnnecessaryNarrowConversion=Unnecessary narrow conversion to {0}
STCoreValidator_UnnecessaryWideConversion=Unnecessary wide conversion from {0}
STCoreValidator_Unqualified_FB_Call_On_FB_With_Input_Event_Size_Not_One=Unqualified FB call on FB with Input Event count <> 1
STCoreValidator_UnusedImport=Unused import ''{0}''
STCoreValidator_UsingNonTemporaryAsControlVariable=Using a non-temporary variable ''{0}'' as the control variable of a FOR loop may leave it in an undefined state
STCoreValidator_NameNotVisible=Name ''{0}'' not visible in this context
STCoreValidator_NestedAssignment=Nesting assignments is not allowed
STCoreValidator_CallableHasNoReturnType=Callable ''{0}'' has return type VOID and cannot be used in assignments
STCoreValidator_BitAccessOutOfRange=Partial access index {0} of out range
STCoreValidator_BitAccessInvalidForType=Partial access invalid for type {0}, which is not of ANY_BIT
STCoreValidator_BitAccessInvalidForReciever=Receiving expression invalid for partial access
STCoreValidator_BitAccessExpressionNotOfTypeAnyInt=Partial bit access expression is not resulting in an ANY_INT, but in {0}
STCoreValidator_Duplicate_Variable_Name=Variable with duplicate name {0}
STCoreValidator_DuplicateAttribute=Duplicate attribute {0} in pragma
STCoreValidator_IndexRangeExpressionInvalid=Invalid expression for defining ranges, must be of the form ANY_INT..ANY_INT
STCoreValidator_IndexRangeTypeInvalid=Type {0} is not valid for defining ranges. Ranges must be of type ANY_INT
STCoreValidator_NonAnyStringNotMaxLengthSettingNotAllowed=For types not of ANY_STRING no maximum length may be defined
STCoreValidator_NonConstantExpressionInVariableDeclaration=Non-constant expression in variable declaration
STCoreValidator_MaxLengthTypeInvalid=Type {0} is not valid to specify an ANY_STRING max length. Max length must be of type ANY_INT
STCoreValidator_TooManyIndicesGiven=Too many indices in subscript access: {0} indices given, but only {1} allowed for {2}
STCoreValidator_ArrayIndexOutOfBounds=Index {0} out of array dimension bounds {1}..{2}
STCoreValidator_Literal_Requires_Type_Specifier=Data type {0} requires type specifier as part of literal
STCoreValidator_String_Literal_Truncated=String literal will be truncated to maximum length of {0}
STCoreValidator_StringIndexOutOfBounds=Index {0} out of bounds for {1}
STCoreValidator_AssignmentOfCallWithoutReturnType=Call on ''{0}'' returns VOID, which cannot be assigned to a variable or used as a call argument
STCoreValidator_ConstantsCannotBeAssigned=Constants cannot be assigned.
STCoreValidator_InputsCannotBeAssigned=Inputs shall not be be assigned. This will be elevated to an error in the future.
STCoreValidator_InsufficientArrayDimensions=Not enough dimensions in declaration for array initializer
STCoreValidator_CallsCannotBeAssignedTo=Assignment to calls are not possible.
STCoreValidator_VariableMaybeNotInitialized=Variable may not have been initialized
STCoreValidator_ControlFlowStatementNeedsToBeInsideALoop={0} statement is only valid inside a loop statement (FOR/WHILE/REPEAT)
STCoreValidator_ArrayAccessReceiverIsInvalid=Invalid receiver for array access operator
